---
github_users:
  - user: distro
    account: DistroByte
    groups: [sudo, docker]

github_url: https://github.com

apt_packages:
  - cron
  - curl
  - git
  - htop
  - net-tools
  - nmap
  - sysstat
  - vim

# Nomad

nomad_os_packages:
  - curl
  - git
  - libcgroup1
  - unzip
  - "{% if ( ansible_distribution  == 'Ubuntu' and ansible_distribution_version is version('19', '<') ) or \
      ( ansible_distribution  == 'Debian' and ansible_distribution_version is version('11', '<') ) \
    %}\
      cgroup-bin\
    {% else %}\
      cgroup-tools\
    {% endif %}"

## Package

nomad_version: 1.3.2
nomad_architecture_map:
  amd64: amd64
  x86_64: amd64
  armv7l: arm
  aarch64: arm64
  32-bit: "386"
  64-bit: amd64
nomad_architecture: "{{ nomad_architecture_map[ansible_architecture] }}"
nomad_pkg: "nomad_{{ nomad_version }}_linux_{{ nomad_architecture }}.zip"
nomad_zip_url: "https://releases.hashicorp.com/nomad/{{ nomad_version }}/nomad_{{ nomad_version }}_linux_{{ nomad_architecture }}.zip"
nomad_checksum_file_url: "https://releases.hashicorp.com/nomad/{{ nomad_version }}/nomad_{{ nomad_version}}_SHA256SUMS"

## Paths

nomad_bin_dir: "/usr/local/bin"
nomad_config_dir: "/etc/nomad.d"
nomad_data_dir: "/var/nomad"
nomad_plugin_dir: "{{ nomad_data_dir }}/plugins"
nomad_lockfile: "/var/lock/subsys/nomad"
nomad_run_dir: "/var/run/nomad"

## Init and startup templates

nomad_systemd_template: nomad_systemd.service.j2
nomad_systemd_unit_path: /lib/systemd/system

### System user and group

nomad_manage_user: true
nomad_user: "root"
nomad_manage_group: false
nomad_group: "bin"

### Nomad settings

nomad_datacenter: "aperture"
nomad_region: "redbrick"
nomad_log_level: "INFO"
nomad_syslog_enable: true
nomad_iface: "{{ ansible_default_ipv4.interface }}"
nomad_node_name: "{{ inventory_hostname_short }}"
nomad_node_role: "client"
nomad_leave_on_terminate: true
nomad_leave_on_interrupt: false
nomad_disable_update_check: false

#### Server settings

nomad_retry_max: 0
nomad_retry_join: false
nomad_retry_interval: "30s"
nomad_rejoin_after_leave: false
nomad_enabled_schedulers:
  - service
  - batch
  - system
nomad_num_schedulers: "{{ ansible_processor_vcpus }}"
nomad_node_gc_threshold: "24h"
nomad_job_gc_threshold: "4h"
nomad_eval_gc_threshold: "1h"
nomad_deployment_gc_threshold: "1h"
nomad_encrypt_enable: "{{ lookup('env','NOMAD_ENCRYPT_ENABLE') | default('false', true) }}"
nomad_raft_protocol: 2

#### Client settings

nomad_node_class: ""
nomad_no_host_uuid: false
nomad_max_kill_timeout: "30s"
nomad_network_speed: 0
nomad_cpu_total_compute: 0
nomad_gc_interval: "1m"
nomad_gc_disk_usage_threshold: 80
nomad_gc_inode_usage_threshold: 70
nomad_gc_parallel_destroys: 2
nomad_reserved:
  cpu: "{{ nomad_reserved_cpu | default('0', true) }}"
  memory: "{{ nomad_reserved_memory | default('0', true) }}"
  disk: "{{ nomad_reserved_disk | default('0', true) }}"
  ports: "{{ nomad_reserved_ports | default('22', true) }}"
nomad_host_volumes: []
nomad_host_networks: []
nomad_options: {}
nomad_meta: {}
nomad_bootstrap_expect: "{{ nomad_servers | count or 3 }}"
nomad_chroot_env: false
nomad_plugins: {}

### Addresses

nomad_bind_address: "{{ hostvars[inventory_hostname]['ansible_'+ nomad_iface ]['ipv4']['address'] }}"
nomad_advertise_address: "{{ hostvars[inventory_hostname]['ansible_' + nomad_iface]['ipv4']['address'] }}"

### Ports

nomad_ports:
  http: "{{ nomad_ports_http | default('4646', true) }}"
  rpc: "{{ nomad_ports_rpc | default('4647', true) }}"
  serf: "{{ nomad_ports_serf | default('4648', true) }}"

### Servers

nomad_group_name: "nomad_instances"
nomad_servers: "\
  {% if nomad_use_consul==false %}\
    {% set _nomad_servers = [] %}\
    {% for host in groups[nomad_group_name] %}\
      {% set _nomad_node_role = hostvars[host]['nomad_node_role'] | default('client', true) %}\
      {% if ( _nomad_node_role == 'server' or _nomad_node_role == 'both') %}\
        {% if _nomad_servers.append(host) %}{% endif %}\
      {% endif %}\
    {% endfor %}\
    {{ _nomad_servers }}\
    {% else %}\
    []\
  {% endif %}"
nomad_gather_server_facts: false

### TlS

nomad_tls_enable: false
nomad_tls_copy_keys: false
nomad_tls_files_remote_src: false
nomad_tls_dir: "{{ lookup('env','NOMAD_TLS_DIR') | default('/etc/nomad/ssl', true) }}"
nomad_ca_file: "{{ lookup('env','NOMAD_CA_FILE') | default('ca.crt', true) }}"
nomad_cert_file: "{{ lookup('env','NOMAD_CERT_FILE') | default('server.crt', true) }}"
nomad_key_file: "{{ lookup('env','NOMAD_KEY_FILE') | default('server.key', true) }}"
nomad_rpc_upgrade_mode: false
nomad_verify_server_hostname: true
nomad_verify_https_client: true

### Autopilot

nomad_autopilot_cleanup_dead_servers: true
nomad_autopilot_last_contact_threshold: "200ms"
nomad_autopilot_max_trailing_logs: 250
nomad_autopilot_server_stabilization_time: "10s"
